<snippet>
	<content><![CDATA[
template <class T, class Op = function<T(T, T)>> struct segtree {
  const Op op;
  const T e = T();
  const int n = 0;
  vector<T> t;
  T& operator[](int i) { return t[n + i]; }
  void build() { for (int i = n; i--; ) t[i] = op(t[2 * i], t[2 * i + 1]); }
  T fold(int l, int r) const {
    T a = e, b = e;
    for (l += n, r += n; l < r; l >>= 1, r >>= 1) {
      if (l & 1) a = op(a, t[l++]);
      if (r & 1) b = op(t[--r], b);
    }
    return op(a, b);
  }
  void set(int i, T a) {
    t[i += n] = a;
    while (i >>= 1) t[i] = op(t[2 * i], t[2 * i + 1]);
  }
};
template <class T, class Op> auto make_segtree(int n, Op op, T e) {
  return segtree<T, Op>{op, e, n, vector<T>(2 * n, e)};
}

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	-- <tabTrigger>tree_segment-risuhiroh</tabTrigger> --
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
